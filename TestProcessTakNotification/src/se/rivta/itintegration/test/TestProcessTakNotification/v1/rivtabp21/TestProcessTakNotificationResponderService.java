
/*
 * 
 */

package se.rivta.itintegration.test.TestProcessTakNotification.v1.rivtabp21;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.1.9
 * Mon Dec 02 12:36:24 CET 2013
 * Generated source version: 2.1.9
 * 
 */


@WebServiceClient(name = "TestProcessTakNotificationResponderService", 
                  wsdlLocation = "file:/Volumes/MacCaseSensitive/matsolsson/Callista/inera-notify/src/test/resources/schemas/interactions/TestProcessTakNotificationInteraction/TestProcessTakNotificationInteraction_1.0_RIVTABP21.wsdl",
                  targetNamespace = "urn:riv:itintegration:test:TestProcessTakNotification:1:rivtabp21") 
public class TestProcessTakNotificationResponderService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:riv:itintegration:test:TestProcessTakNotification:1:rivtabp21", "TestProcessTakNotificationResponderService");
    public final static QName TestProcessTakNotificationResponderPort = new QName("urn:riv:itintegration:test:TestProcessTakNotification:1:rivtabp21", "TestProcessTakNotificationResponderPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Volumes/MacCaseSensitive/matsolsson/Callista/inera-notify/src/test/resources/schemas/interactions/TestProcessTakNotificationInteraction/TestProcessTakNotificationInteraction_1.0_RIVTABP21.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/Volumes/MacCaseSensitive/matsolsson/Callista/inera-notify/src/test/resources/schemas/interactions/TestProcessTakNotificationInteraction/TestProcessTakNotificationInteraction_1.0_RIVTABP21.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public TestProcessTakNotificationResponderService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TestProcessTakNotificationResponderService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TestProcessTakNotificationResponderService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns TestProcessTakNotificationResponderInterface
     */
    @WebEndpoint(name = "TestProcessTakNotificationResponderPort")
    public TestProcessTakNotificationResponderInterface getTestProcessTakNotificationResponderPort() {
        return super.getPort(TestProcessTakNotificationResponderPort, TestProcessTakNotificationResponderInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TestProcessTakNotificationResponderInterface
     */
    @WebEndpoint(name = "TestProcessTakNotificationResponderPort")
    public TestProcessTakNotificationResponderInterface getTestProcessTakNotificationResponderPort(WebServiceFeature... features) {
        return super.getPort(TestProcessTakNotificationResponderPort, TestProcessTakNotificationResponderInterface.class, features);
    }

}
