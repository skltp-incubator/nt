<?xml version="1.0" encoding="utf-8"?>
<mule
    xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
    xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
    xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
    xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-current.xsd 
        http://www.mulesoft.org/schema/mule/cxf       http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd 
        http://www.mulesoft.org/schema/mule/jms       http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd 
        http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
        http://www.mulesoft.org/schema/mule/core      http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
        http://www.mulesoft.org/schema/mule/https     http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd 
        http://www.mulesoft.org/schema/mule/http      http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/xml       http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">
<% if (LOGICAL_ADDRESSES.size() > 0) { %>
    <!-- JMS Connector for the durable topic subscribers -->
    <jms:connector
        name="skltp-nt-jms-topic-connector"
        connectionFactory-ref="soitoolkit-jms-connection-factory"
        clientId="SKLTP-NT"
        durable="true" 
        persistentDelivery="true"
        maxRedelivery="-1"
        specification="1.1" 
        disableTemporaryReplyToDestinations="true" 
        validateConnections="true"
    />
<% } %>


<% LOGICAL_ADDRESSES.each { LOGICAL_ADDRESS -> %>

    <flow name="notify-service-${LOGICAL_ADDRESS}">

        <jms:inbound-endpoint
            connector-ref="skltp-nt-jms-topic-connector"
            topic="${NOTIFY_TOPIC}" 
            durableName="${LOGICAL_ADDRESS}" 
            transformer-refs="logMsgIn" 
            doc:name="JMS Topic">
            <jms:transaction action="ALWAYS_BEGIN"/>
        </jms:inbound-endpoint>

        <choice doc:name="Filter">
            <when expression='#[app.registry.filter.allows("${LOGICAL_ADDRESS}", message)]'>

                <logger level="DEBUG"  message="[${LOGICAL_ADDRESS}] From Queue: \n#[payload]" doc:name="Logger"/>

                <set-variable doc:name="setLogicalAddress" value="${LOGICAL_ADDRESS}" variableName="logicalAddress"/>

                <custom-transformer class="se.skltp.nt.intsvc.XmlToXmlStreamReaderWithAddressChange">
                    <spring:property name="reversible" value="true"/>
                    <spring:property name="logicalAddress" value="${LOGICAL_ADDRESS}"/>
                </custom-transformer>

                <message-properties-transformer doc:name="Message Properties">
                    <add-message-property key="SOAPAction" value="#[message.inboundProperties.NT_SOAP_ACTION]"/>
                </message-properties-transformer>

                <cxf:proxy-client doc:name="SOAP" payload="envelope"/>

                <set-property propertyName="x-rivta-original-serviceconsumer-hsaid" value="${NT_SERVICECONSUMER_HSAID}" doc:name="x-rivta-original-serviceconsumer-hsaid" />

                <logger level="INFO"  message="[${LOGICAL_ADDRESS}] Sending #[message.inboundProperties.NT_SERVICE_CONTRACT_URI], auth as ${NT_SERVICECONSUMER_HSAID} to http://#[message.inboundProperties.NT_ENDPOINT_HOST]:#[message.inboundProperties.NT_ENDPOINT_PORT]/#[message.inboundProperties.NT_ENDPOINT_PATH]"/>

                <http:outbound-endpoint exchange-pattern="request-response"
                    doc:name="HTTP" method="POST"
                    transformer-refs="logMsgOut"
                    host="#[message.inboundProperties.NT_ENDPOINT_HOST]"
                    port="#[message.inboundProperties.NT_ENDPOINT_PORT]"
                    path="#[message.inboundProperties.NT_ENDPOINT_PATH]">
                    <jms:transaction action="ALWAYS_JOIN"/>
                </http:outbound-endpoint>

            </when>
            <otherwise>
                <logger message="[${LOGICAL_ADDRESS}] Filtered out #[message.inboundProperties.NT_SERVICE_CONTRACT_URI + '/' + message.inboundProperties.NT_SERVICE_DOMAIN + '/' + message.inboundProperties.NT_CATEGORIZATION]"
                 level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>

        <custom-exception-strategy class="org.soitoolkit.commons.mule.error.ServiceExceptionStrategy"/>
    </flow>
<% } %>
</mule>